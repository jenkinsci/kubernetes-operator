name: Run tests
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, ready_for_review, reopened]
    branches:
      - master
jobs:
  run-tests:
    if: github.event.pull_request.draft == false
    name: Run automated tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check if skip
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.event.pull_request.base.ref }} | grep -qvE '(\.md$)|(^(docs|website))/'; then
            echo "git diff --name-only ${{ github.event.before }} ${{ github.event.pull_request.base.ref }}"
            echo "DOCS_ONLY=$(git diff --name-only ${{ github.event.before }} ${{ github.event.pull_request.base.ref }} | grep -qvE '(\.md$)|(^(docs|website))/')" >> $GITHUB_ENV
          else
            echo "DOCS_ONLY=no" >> $GITHUB_ENV
          fi

      - name: Set up env vars
        if: env.DOCS_ONLY != 'no'
        run: |
          echo "GO111MODULE=on" >> $GITHUB_ENV
          echo "CHANGE_MINIKUBE_NONE_USER=true" >> $GITHUB_ENV
          echo "MINIKUBE_WANTUPDATENOTIFICATION=false" >> $GITHUB_ENV
          echo "MINIKUBE_WANTREPORTERRORPROMPT=false" >> $GITHUB_ENV
          echo "GO_VERSION=v$(sed -n 's/GO_VERSION=//p' config.base.env)" >> $GITHUB_ENV
          echo "MINIKUBE_VERSION=v$(sed -n 's/MINIKUBE_VERSION=//p' config.minikube.env)" >> $GITHUB_ENV
          echo "OPERATOR_SDK_VERSION=v$(sed -n 's/OPERATOR_SDK_VERSION=//p' config.base.env)" >> $GITHUB_ENV
          echo "MINIKUBE_KUBERNETES_VERSION=$(sed -n 's/MINIKUBE_KUBERNETES_VERSION=//p' config.minikube.env)" >> $GITHUB_ENV
          echo "HELM_VERSION=v$(sed -n 's/HELM_VERSION=//p' config.base.env)" >> $GITHUB_ENV
          echo "GOPATH=/home/runner/go" >> $GITHUB_ENV

      - name: Prepare go environment
        if: env.DOCS_ONLY != 'no'
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Ensure Golang runtime dependencies
        if: env.DOCS_ONLY != 'no'
        run: make go-dependencies